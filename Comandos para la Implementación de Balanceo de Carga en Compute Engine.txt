# Definir variables de entorno para reutilizarlas en los comandos
# Reemplaza los valores según los indicados en el laboratorio antes de ejecutar
export INSTANCE="TU_VALOR_AQUI"  # Ejemplo: nucleus-jumphost-624
export FIREWALL="TU_VALOR_AQUI"  # Ejemplo: accept-tcp-rule-112
export REGION="TU_VALOR_AQUI"    # Ejemplo: us-east1
export ZONE="TU_VALOR_AQUI"      # Ejemplo: us-east1-c

# Crear una instancia de VM en la zona especificada
gcloud compute instances create $INSTANCE \
    --zone=$ZONE \
    --machine-type=e2-micro 

# Crear un script de inicio para instalar y configurar Nginx en las VMs
cat << EOF > startup.sh
#! /bin/bash
# Actualizar los paquetes del sistema
apt-get update
# Instalar Nginx  
apt-get install -y nginx 
# Iniciar el servicio Nginx 
service nginx start 
# Personalizar la página de inicio
sed -i -- 's/nginx/Google Cloud Platform - '"\$HOSTNAME"'/' /var/www/html/index.nginx-debian.html  
EOF

# Crear una plantilla de instancia para las VMs del balanceador de carga
# Se asigna el script de inicio a la plantilla
gcloud compute instance-templates create web-server-template \
        --metadata-from-file startup-script=startup.sh \
        --machine-type e2-medium \
        --region $REGION

# Crear un grupo administrado de instancias con dos VMs basadas en la plantilla anterior
# Se define el número de instancias iniciales en el grupo
gcloud compute instance-groups managed create web-server-group \
        --base-instance-name web-server \
        --size 2 \
        --template web-server-template \
        --region $REGION

# Crear una regla de firewall para permitir tráfico HTTP (puerto 80)
gcloud compute firewall-rules create $FIREWALL \
        --allow tcp:80 \
        --network default

# Crear un chequeo de salud HTTP para verificar el estado de las instancias
gcloud compute http-health-checks create http-basic-check

# Asignar el puerto HTTP (80) como puerto nombrado en el grupo de instancias
gcloud compute instance-groups managed set-named-ports web-server-group \
        --named-ports http:80 \
        --region $REGION

# Crear un servicio de backend que usará el balanceador de carga
gcloud compute backend-services create web-server-backend \
        --protocol HTTP \
        --http-health-checks http-basic-check \  # Asociar el chequeo de salud al backend
        --global

# Agregar el grupo de instancias como backend real al servicio de backend
gcloud compute backend-services add-backend web-server-backend \
        --instance-group web-server-group \
        --instance-group-region $REGION \
        --global

# Crear un mapa de URL que redirigirá todas las solicitudes al backend
gcloud compute url-maps create web-server-map \
        --default-service web-server-backend

# Crear un proxy HTTP para gestionar las solicitudes entrantes
gcloud compute target-http-proxies create http-lb-proxy \
        --url-map web-server-map

# Crear una regla de reenvío global para recibir tráfico en el puerto 80 y enviarlo al proxy HTTP
gcloud compute forwarding-rules create http-content-rule \
      --global \
      --target-http-proxy http-lb-proxy \
      --ports 80

# Listar todas las reglas de reenvío para verificar que la configuración sea correcta
gcloud compute forwarding-rules list 
